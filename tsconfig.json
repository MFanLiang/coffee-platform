{
  "compilerOptions": {
    "target": "ES2020", // 目标语言版本
    "useDefineForClassFields": true,
    "lib": [
      "DOM",
      "DOM.Iterable",
      "ESNext",
      "ES2020"
    ],
    "allowJs": true, // 允许编译器编译 JS/JSX 文件
    "module": "ESNext", // 生成代码的模板标准
    "skipLibCheck": true, // 跳过声明文件的类型检查
    "esModuleInterop": false,
    "allowSyntheticDefaultImports": true,
    /* Strict Type-Checking Options */
    "strict": true /* Enable all strict type-checking options. */,
    // "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": true,              /* Enable strict null checks. */
    // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
    // "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
    // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */
    "forceConsistentCasingInFileNames": true,
    "moduleResolution": "Node",
    "resolveJsonModule": true, // 允许导入扩展名为 .json 的模块
    "isolatedModules": true, // 所有的实现文件必须是 模块 （也就是它有某种形式的 import/export）
    "noEmit": true,
    "jsx": "react-jsx",
    "baseUrl": ".", // 解析非相对模块名的基准目录
    "paths": { // 模块名到基于 baseUrl的路径映射的列表
      "@": [
        "/src"
      ],
      "@/*": [
        "src/*"
      ],
      "assets": [
        "/src/assets"
      ]
    }
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.d.ts",
    "src/**/*.tsx",
    "config/vite.config.ts"
  ],
  "exclude": [
    "node_modules",
    "dist",
    "**/*.js"
  ],
  "references": [
    {
      "path": "./tsconfig.node.json"
    }
  ]
}
